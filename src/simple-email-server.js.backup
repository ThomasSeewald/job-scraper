const express = require('express');
const { Pool } = require('pg');
const fs = require('fs');
const path = require('path');

// Load configuration
const config = JSON.parse(fs.readFileSync(path.join(__dirname, '../config/database.json'), 'utf8'));
const dbConfig = config.production;

const app = express();
const pool = new Pool(dbConfig);
const PORT = 3001;

// Middleware
app.use(express.json());
app.use(express.static('public'));

// Simple HTML page
app.get('/', (req, res) => {
    res.send(`
    <!DOCTYPE html>
    <html lang="de">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Email-Adressen Suche</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
        <style>
            body { padding: 20px; }
            .result-row { margin: 10px 0; padding: 10px; border: 1px solid #ddd; border-radius: 5px; }
            .email-link { color: #0066cc; text-decoration: none; font-weight: bold; }
        </style>
    </head>
    <body>
        <div class="container">
            <h1 class="mb-4">📧 Email-Adressen Suche</h1>
            
            <div class="card mb-4">
                <div class="card-body">
                    <h5>Suchfilter</h5>
                    <form id="searchForm">
                        <div class="row">
                            <div class="col-md-4">
                                <label class="form-label">Berufsart:</label>
                                <input type="text" id="jobType" class="form-control" placeholder="z.B. Informatiker">
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Ort/PLZ:</label>
                                <input type="text" id="location" class="form-control" placeholder="z.B. Berlin">
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Firma:</label>
                                <input type="text" id="company" class="form-control" placeholder="Firmenname">
                            </div>
                        </div>
                        <div class="mt-3">
                            <button type="submit" class="btn btn-primary">Suchen</button>
                            <button type="button" onclick="exportCSV()" class="btn btn-success ms-2">CSV Export</button>
                        </div>
                    </form>
                </div>
            </div>

            <div id="results"></div>
        </div>

        <script>
            let currentResults = [];

            document.getElementById('searchForm').addEventListener('submit', async (e) => {
                e.preventDefault();
                
                const jobType = document.getElementById('jobType').value;
                const location = document.getElementById('location').value;
                const company = document.getElementById('company').value;
                
                const resultsDiv = document.getElementById('results');
                resultsDiv.innerHTML = '<div class="text-center"><div class="spinner-border"></div> Suche läuft...</div>';
                
                try {
                    const response = await fetch('/api/search', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ jobType, location, company })
                    });
                    
                    const data = await response.json();
                    currentResults = data.results || [];
                    displayResults(currentResults);
                    
                } catch (error) {
                    resultsDiv.innerHTML = '<div class="alert alert-danger">Fehler: ' + error.message + '</div>';
                }
            });

            function displayResults(results) {
                const resultsDiv = document.getElementById('results');
                
                if (results.length === 0) {
                    resultsDiv.innerHTML = '<div class="alert alert-info">Keine Ergebnisse gefunden.</div>';
                    return;
                }
                
                let html = '<h4>' + results.length + ' Ergebnisse gefunden:</h4>';
                
                results.forEach(result => {
                    html += \`
                        <div class="result-row">
                            <strong>\${result.titel}</strong><br>
                            <small class="text-muted">\${result.beruf || ''}</small><br>
                            <strong>Firma:</strong> \${result.arbeitgeber}<br>
                            <strong>Ort:</strong> \${result.arbeitsort_ort} (\${result.arbeitsort_plz})<br>
                            <strong>Email:</strong> <a href="mailto:\${result.best_email}" class="email-link">\${result.best_email}</a>
                        </div>
                    \`;
                });
                
                resultsDiv.innerHTML = html;
            }

            function exportCSV() {
                if (currentResults.length === 0) {
                    alert('Keine Daten zum Exportieren vorhanden.');
                    return;
                }
                
                const csv = [
                    'Titel,Beruf,Firma,Ort,PLZ,Email',
                    ...currentResults.map(r => 
                        \`"\${r.titel}","\${r.beruf || ''}","\${r.arbeitgeber}","\${r.arbeitsort_ort}","\${r.arbeitsort_plz}","\${r.best_email}"\`
                    )
                ].join('\\n');
                
                const blob = new Blob([csv], { type: 'text/csv' });
                const url = URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = 'email-export.csv';
                a.click();
                URL.revokeObjectURL(url);
            }
        </script>
    </body>
    </html>
    `);
});

// Simple search API
app.post('/api/search', async (req, res) => {
    try {
        const { jobType, location, company } = req.body;
        
        let query = `
            SELECT DISTINCT
                j.titel,
                j.beruf,
                j.arbeitgeber,
                j.arbeitsort_ort,
                j.arbeitsort_plz,
                jd.best_email
            FROM arbeitsagentur_jobs_v2 j
            INNER JOIN job_details jd ON j.refnr = jd.reference_number
            WHERE j.is_active = true 
            AND jd.best_email IS NOT NULL
            AND jd.scraping_success = true
        `;
        
        const params = [];
        let paramIndex = 1;
        
        if (jobType && jobType.trim()) {
            query += ` AND (LOWER(j.beruf) LIKE LOWER($${paramIndex}) OR LOWER(j.titel) LIKE LOWER($${paramIndex}))`;
            params.push(`%${jobType.trim()}%`);
            paramIndex++;
        }
        
        if (location && location.trim()) {
            query += ` AND (j.arbeitsort_plz = $${paramIndex} OR LOWER(j.arbeitsort_ort) LIKE LOWER($${paramIndex + 1}))`;
            params.push(location.trim(), `%${location.trim()}%`);
            paramIndex += 2;
        }
        
        if (company && company.trim()) {
            query += ` AND LOWER(j.arbeitgeber) LIKE LOWER($${paramIndex})`;
            params.push(`%${company.trim()}%`);
            paramIndex++;
        }
        
        query += ` ORDER BY j.aktuelleveroeffentlichungsdatum DESC LIMIT 100`;
        
        const result = await pool.query(query, params);
        
        res.json({
            success: true,
            results: result.rows,
            count: result.rows.length
        });
        
    } catch (error) {
        console.error('Search error:', error);
        res.status(500).json({
            success: false,
            error: error.message
        });
    }
});

// Health check
app.get('/health', (req, res) => {
    res.json({ status: 'OK', timestamp: new Date().toISOString() });
});

// Start server
app.listen(PORT, () => {
    console.log(`🌐 Simple Email Search Server gestartet auf Port ${PORT}`);
    console.log(`📧 Zugriff über: http://localhost:${PORT}`);
    console.log(`🔧 Health Check: http://localhost:${PORT}/health`);
});

// Graceful shutdown
process.on('SIGINT', () => {
    console.log('\n🛑 Server wird beendet...');
    process.exit(0);
});